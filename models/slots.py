"""
–§–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã slots
"""

from discord import Colour, Embed
from random import choice

# –ù–æ–º–µ—Ä–∞ —ç–º–æ–¥–∑–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ emoji
slots = [1, 2, 3, 4, 5] #0.5, 0.75, 1, 1.25, 1.5 modifier

# –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏
emoji = ["","üçó", "üçå", "ü••", "üçé", "üç∫"]
mod = {
    slots[0] : 0.5, # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è —ç–º–æ–¥–∑–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 1
    slots[1] : 0.75, # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è —ç–º–æ–¥–∑–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 2
    slots[2] : 1, # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è —ç–º–æ–¥–∑–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 3
    slots[3] : 1.25, # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è —ç–º–æ–¥–∑–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 4
    slots[4] : 1.5 # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è —ç–º–æ–¥–∑–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 5
}

# –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è –∫–æ–º–±–æ
combo = {
    1 : 1, # –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ 3 –≤ —Ä—è–¥
    2 : 1, # –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ 3 –≤ —Ä—è–¥
    3 : 2, # –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ 5 –≤ —Ä—è–¥
    4 : 1.5, # –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ 4 –≤ —Ä—è–¥
    5 : 1 # –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ 3 –≤ —Ä—è–¥
}

# –ê–π–¥–∏ —ç–º–æ–¥–∑–∏, —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å–ø–∏—Å–∫–∞ emoji
emomoji = {
    1 : 811696894149394443,
    2 : 811697988878598144,
    3 : 811698002217271316,
    4 : 811698013696688138,
    5 : 811698023666942034,
    6 : 811698034026479666
}



class Slots(Embed):
    def __init__(self):
        super().__init__(color = Colour.dark_theme())
        # –†–∞–∑–º–µ—Ä –∏–≥—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—è
        self.size = (3, 5) #x, y
    
    def randomize(self):
        # –ú–µ—Ç–æ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è —Å–ª—É—á–∞–π–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ —ç–º–æ–¥–∑–∏
        self.roll = [choice(slots) for i in range(self.size[0] * self.size[1])]
    
    def checkwin(self):
        """
        –ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–±–µ–¥—ã
        –ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è check_* –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–±–∞–≤–∏—Ç—Å—è –∫ –æ–±—â–µ–º—É –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—É –∏ –±—É–¥–µ—Ç —É–º–Ω–æ–∂–µ–Ω –Ω–∞ —Å—Ç–∞–≤–∫—É
        
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            int - –æ–±—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–∞
        """
        r = self.roll
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
        x 0 0
        x 0 0
        x 0 0
        """
        def check_vertical(r):
            win = 0
            up = combo[1]
            if r[0] == r[5] == r[10]:
                win += mod[r[0]] * up
            if r[1] == r[6] == r[11]:
                win += mod[r[1]] * up
            if r[2] == r[7] == r[12]:
                win += mod[r[2]] * up
            if r[3] == r[8] == r[13]:
                win += mod[r[3]] * up
            if r[4] == r[9] == r[14]:
                win += mod[r[4]] * up
            return win


        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏
        x 0 0
        0 x 0
        0 0 x
        """

        def check_bevel(r):
            win = 0
            up = combo[2]
            if r[0] == r[6] == r[12]:
                win += mod[r[0]] * up
            if r[1] == r[7] == r[13]:
                win += mod[r[1]] * up
            if r[2] == r[8] == r[14]:
                win += mod[r[2]] * up
            return win

        
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ 2
        0 0 x
        0 x 0
        x 0 0
        """
        
        def check_ubevel(r):
            win = 0
            up = combo[2]
            if r[2] == r[6] == r[10]:
                win += mod[r[2]] * up
            if r[3] == r[7] == r[11]:
                win += mod[r[3]] * up
            if r[4] == r[8] == r[12]:
                win += mod[r[4]] * up
            return win
        
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 3, 4 –∏ 5 –≤ —Ä—è–¥
        x x x x x
        0 0 0 0 0
        0 0 0 0 0
        """

        def check_big_line(r):
            win = 0
            up1 = combo[3]
            up2 = combo[4]
            up3 = combo[5]
            if r[0] == r[1] == r[2] == r[3] == r[4]:
                win += up1 * mod[r[0]]
            elif r[0] == r[1] == r[2] == r[3]:
                win += up2 * mod[r[0]]
            elif r[1] == r[2] == r[3] == r[4]:
                win += up2 * mod[r[1]]
            elif r[0] == r[1] == r[2]:
                win += up3 * mod[r[0]]
            elif r[1] == r[2] == r[3]:
                win += up3 * mod[r[1]]
            elif r[2] == r[3] == r[4]:
                win += up3 * mod[r[2]]

            if r[5] == r[6] == r[7] == r[8] == r[9]:
                win += up1 * mod[r[5]]
            elif r[5] == r[6] == r[7] == r[8]:
                win += up2 * mod[r[5]]
            elif r[6] == r[7] == r[8] == r[9]:
                win += up2 * mod[r[6]]
            elif r[5] == r[6] == r[7]:
                win += up3 * mod[r[5]]
            elif r[6] == r[7] == r[8]:
                win += up3 * mod[r[6]]
            elif r[7] == r[8] == r[9]:
                win += up3 * mod[r[7]]

            if r[10] == r[11] == r[12] == r[13] == r[14]:
                win += up1 * mod[r[10]]
            elif r[10] == r[11] == r[12] == r[13]:
                win += up2 * mod[r[10]]
            elif r[11] == r[12] == r[13] == r[14]:
                win += up2 * mod[r[11]]
            elif r[10] == r[11] == r[12]:
                win += up3 * mod[r[10]]
            elif r[11] == r[12] == r[13]:
                win += up3 * mod[r[11]]
            elif r[12] == r[13] == r[14]:
                win += up3 * mod[r[12]]
            return win
        
        # –∏—Ç–æ–≥–æ–≤—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
        win = check_vertical(r) + check_bevel(r) + check_ubevel(r) + check_big_line(r)
        return win

    def spin(self, bet: int):
        """
        –ú–µ—Ç–æ–¥, —Å–æ–≤–µ—Ä—à–∞—é—â–∏–π –ø—Ä–æ–∫—Ä—É—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –∏—Ç–æ–≥–æ–≤—ã–π –≤—ã–∏–≥—Ä—ã—à –∏ –ø–æ–ª–µ —Å –Ω–æ–º–µ—Ä–∞–º–∏ —ç–º–æ–¥–∑–∏

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            bet: int - —Å—Ç–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            (int, list) - –≤—ã–∏–≥—Ä—ã—à, –ø–æ–ª–µ
        """
        self.randomize()
        win = self.checkwin()
        return bet * win, self.roll
